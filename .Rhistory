knitr::opts_chunk$set(fig.pos = 'H')
# Loading all libraries and data
library(AER)
library(dplyr)
library(ggplot2)
library(SuppDists)
library(haven)
library(naniar)
library(s20x)
library(car)
library(lme4)
library(MASS)
STAR<-read_sav("STAR_Students.sav")
# Select variables related to 1st student's math score
STAR.1st<-STAR[,c("g1tmathss","g1classtype","g1schid","g1surban","g1tchid","g1trace","g1thighdegree","g1tcareer","g1tyears")]
# Select variables to find the missing value pattern across 3 years
STAR.3yr<-STAR[,c("g1tmathss","g2tmathss","g3tmathss","g1classtype","g2classtype","g3classtype","g1surban","g2surban","g3surban")]
# Visualize the missing data for each column
vis_miss(STAR.3yr,cluster = TRUE)
gg_miss_var(STAR.1st)
# delete the samples not participating STAR program in 1st grade
STAR<-STAR[STAR$FLAGSG1==1,]
# Update data
STAR.1st<-STAR[,c("g1tmathss","g1classtype","g1schid","g1surban","g1tchid","g1trace","g1thighdegree","g1tcareer","g1tyears")]
STAR.3yr<-STAR[,c("g1tmathss","g2tmathss","g3tmathss","g1classtype","g2classtype","g3classtype","g1surban","g2surban","g3surban")]
# Visualize the missing data for each column
vis_miss(STAR.3yr,cluster = TRUE)
gg_miss_var(STAR.1st)
# Aggregate the data at the class level
STAR.class.level<-STAR.1st %>%
group_by(g1classtype,g1schid,g1surban,g1tchid,g1trace,g1thighdegree,g1tcareer,g1tyears) %>%
summarise(g1tavgmath=mean(g1tmathss,na.rm = TRUE),
g1tmedmath=median(g1tmathss,na.rm = TRUE))
# Factorize the categorical data
STAR.class.level$g1classtype<-as.factor(STAR.class.level$g1classtype)
STAR.class.level$g1schid<-as.factor(STAR.class.level$g1schid)
STAR.class.level$g1surban<-as.factor(STAR.class.level$g1surban)
STAR.class.level$g1tchid<-as.factor(STAR.class.level$g1tchid)
STAR.class.level$g1trace<-as.factor(STAR.class.level$g1trace)
STAR.class.level$g1thighdegree<-as.factor(STAR.class.level$g1thighdegree)
STAR.class.level$g1tcareer<-as.factor(STAR.class.level$g1tcareer)
# Provide the summary statistic
summary(STAR.class.level)
# Box-plot and violin plot for math grade v.s. class type
ggplot(STAR.class.level,aes(x=g1classtype,y=g1tavgmath))+geom_boxplot()+
labs(x="",y="Average Math Grade")+
stat_summary(fun="mean")
ggplot(STAR.class.level,aes(x=g1classtype,y=g1tavgmath))+geom_violin()+
labs(x="",y="Average Math Grade")
# Box-plot and violin plot for math grade v.s. school type
ggplot(STAR.class.level,aes(x=g1schid,y=g1tavgmath))+geom_boxplot()+
labs(x="",y="Average Math Grade")
# Box-plot and violin plot for math grade v.s. school type
ggplot(STAR.class.level,aes(x=g1surban,y=g1tavgmath))+geom_boxplot()+
labs(x="",y="Average Math Grade")
ggplot(STAR.class.level,aes(x=g1surban,y=g1tavgmath))+geom_violin()+
labs(x="",y="Average Math Grade")
# Fit the original and simplified Two-way ANOVA model
anova.fit<-aov(g1tavgmath~g1classtype+g1schid,data = STAR.class.level)
anova.fit2<-aov(g1tavgmath~g1classtype+g1surban,data = STAR.class.level)
print(anova.fit2$coefficients)
# Box-Cox Test
boxcox(aov(g1tavgmath~g1classtype+g1schid,data = STAR.class.level))
# Box-Cox Transformation and fit the model
STAR.class.level$g1tavgmath<-1/STAR.class.level$g1tavgmath
anova.fit<-aov(g1tavgmath~g1classtype+g1schid,data = STAR.class.level)
summary(anova.fit)
# Find the Ci for Tukey's Range Test
sig.level<-0.05
T.ci<-TukeyHSD(anova.fit,conf.level = 1-sig.level)
par(mfrow=c(1,2))
plot(T.ci, las=1 , col="brown")
par(mfrow=c(1,1))
print("CI for regular+aide-small")
print(T.ci[["g1classtype"]]["3-1",])
print("CI for regular-small")
print(T.ci[["g1classtype"]]["2-1",])
# Residual Plots and QQ Plots
par(mfrow=c(1,2))
plot(anova.fit,which = 1)
qqnorm(residuals(anova.fit))
qqline(residuals(anova.fit),col = "red")
# Levene's test for equal variance
leveneTest(residuals(anova.fit)~STAR.class.level$g1classtype)
# Shapiro-Wilk test for normality
shapiro.test(anova.fit$residuals)
# Fit the model
anova.fit3<-aov(g1tmedmath~g1classtype+g1schid,data = STAR.class.level)
anova.fit4<-aov(g1tmedmath~g1classtype+g1surban,data = STAR.class.level)
print(anova.fit4$coefficient)
# Box-Cox Test
boxcox(aov(g1tmedmath~g1classtype+g1schid,data = STAR.class.level))
# Box-Cox transformation
STAR.class.level$g1tmedmath<-1/STAR.class.level$g1tmedmath
# Get the summary statistic
summary(anova.fit3)
# Residual Plots and QQ Plots
par(mfrow=c(1,2))
plot(anova.fit3,which = 1)
qqnorm(residuals(anova.fit3))
qqline(residuals(anova.fit3),col = "red")
# Shapiro-Wilk test for normality
shapiro.test(anova.fit3$residuals)
# Levene's test for equal variance
leveneTest(residuals(anova.fit3)~STAR.class.level$g1classtype)
# Fit the model and find the its summary statistic
anova.fit5<-lmer(g1tmedmath~g1classtype+(1|g1schid),data = STAR.class.level)
summary(anova.fit5)
confint(anova.fit5)
# Residual Plots and QQ Plots
par(mfrow=c(1,2))
plot(fitted(anova.fit5),residuals(anova.fit5))
abline(h=0,col = "gray")
qqnorm(residuals(anova.fit5))
qqline(residuals(anova.fit5),col = "red")
# Levene's test for equal variance
leveneTest(residuals(anova.fit5)~STAR.class.level$g1classtype)
# Shapiro-Wilk test for normality
shapiro.test(residuals(anova.fit5))
labs = knitr::all_labels()
labs = labs[!labs %in% c("setup","getlabels","allcode")]
sessionInfo()
# Residual Plots and QQ Plots
par(mfrow=c(1,2))
plot(fitted(anova.fit5),residuals(anova.fit5))
abline(h=0,col = "gray")
qqnorm(residuals(anova.fit5))
qqline(residuals(anova.fit5),col = "red")
# Fit the model and find the its summary statistic
anova.fit5<-lmer(g1tmedmath~g1classtype+(1|g1schid),data = STAR.class.level)
summary(anova.fit5)
confint(anova.fit5)
anova.fit6<-lmer(g1tmedmath~(1|g1schid),data = STAR.class.level)
anova(anova.fit5,anova.fit5,test="Chisq")
anova.fit6<-lmer(g1tmedmath~(1|g1schid),data = STAR.class.level)
anova(anova.fit5,anova.fit6,test="Chisq")
